{"version":3,"sources":["ShowWeatherData.jsx","Navbar.jsx","App.jsx","index.js"],"names":["ShowWeatherData","props","dataWeather","country","description","pressure","feelslike","humidity","image","location","precip","region","temperature","wind_speed","className","src","alt","Navbar","style","color","timezone_id","onSubmit","event","updateWeather","icon","faMapMarkerAlt","size","id","placeholder","onChange","changeLocation","target","value","localtime","App","state","coords","latitude","longitude","data","inputLocation","newChange","setState","preventDefault","Axios","get","then","res","name","current","weather_descriptions","weather_icons","navigator","geolocation","getCurrentPosition","pos","newCoords","console","log","this","Component","ReactDOM","render","document","getElementById"],"mappings":"kPAEe,SAASA,EAAgBC,GAAO,MAezCA,EAAMC,YAXRC,EAJ2C,EAI3CA,QACAC,EAL2C,EAK3CA,YACAC,EAN2C,EAM3CA,SACAC,EAP2C,EAO3CA,UACAC,EAR2C,EAQ3CA,SACAC,EAT2C,EAS3CA,MACAC,EAV2C,EAU3CA,SACAC,EAX2C,EAW3CA,OACAC,EAZ2C,EAY3CA,OACAC,EAb2C,EAa3CA,YACAC,EAd2C,EAc3CA,WAGF,OACE,sBAAKC,UAAU,iBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,+BACGF,EACD,oCAFF,MAEkBR,KAElB,8BACG,IADH,eAEeE,EACb,oCAHF,OAKA,6BAAKG,IACL,8BACGE,EADH,KACaR,QAIf,qBAAKW,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAYC,IAAKP,EAAOQ,IAAI,iBAI/C,sBAAKF,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,8BACE,2CADF,cAGA,6BAAKD,OAGP,sBAAKC,UAAU,WAAf,UACE,8BACE,yCADF,WAGA,6BAAKT,OAGP,sBAAKS,UAAU,WAAf,UACE,8BACE,yCADF,SAGA,6BAAKP,OAGP,sBAAKO,UAAU,WAAf,UACE,8BACE,8CADF,WAGA,6BAAKJ,a,oBC/DA,SAASO,EAAOhB,GAC7B,OACE,qCACE,qBAAKa,UAAU,uBAAf,SACE,oBAAIA,UAAU,sCAAd,8BAUF,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,oBAAII,MAAO,CAAEC,MAAO,WAApB,SAAkClB,EAAMC,YAAYC,UACpD,4BAAIF,EAAMC,YAAYkB,iBAGxB,qBAAKN,UAAU,WAAf,SACE,uBAAMO,SAAU,SAACC,GAAD,OAAWrB,EAAMsB,cAAcD,IAA/C,UACE,cAAC,IAAD,CAAiBE,KAAMC,IAAgBC,KAAK,KAAKP,MAAM,SACvD,uBACEQ,GAAG,aACHb,UAAU,gBACVc,YAAY,uBACZC,SAAU,SAACP,GAAD,OAAWrB,EAAM6B,eAAeR,EAAMS,OAAOC,eAQ7D,qBAAKlB,UAAU,WAAf,SACE,oBAAII,MAAO,CAAEC,MAAO,WAApB,SAAkClB,EAAMC,YAAY+B,oB,ICkE/CC,E,4MAlGbC,MAAQ,CACNC,OAAQ,CACNC,SAAU,GACVC,WAAY,IAGdC,KAAM,GACNC,cAAe,I,EA4CjBC,UAAY,SAACT,GAEX,EAAKU,SAAS,CAAEF,cAAeR,K,EAGjCT,cAAgB,SAACD,GACfA,EAAMqB,iBAENC,IAAMC,IAAN,gGAC2F,EAAKV,MAAMK,gBACpGM,MAAK,SAACC,GAEN,IAAI7C,EAAc,CAChBC,QAAS4C,EAAIR,KAAK9B,SAASN,QAC3BQ,OAAQoC,EAAIR,KAAK9B,SAASE,OAC1BF,SAAUsC,EAAIR,KAAK9B,SAASuC,KAC5BpC,YAAamC,EAAIR,KAAKU,QAAQrC,YAC9BN,UAAWyC,EAAIR,KAAKU,QAAQ3C,UAC5BC,SAAUwC,EAAIR,KAAKU,QAAQ1C,SAC3BG,OAAQqC,EAAIR,KAAKU,QAAQvC,OACzBL,SAAU0C,EAAIR,KAAKU,QAAQ5C,SAC3BQ,WAAYkC,EAAIR,KAAKU,QAAQpC,WAC7BT,YAAa2C,EAAIR,KAAKU,QAAQC,qBAAqB,GACnD1C,MAAOuC,EAAIR,KAAKU,QAAQE,cACxB/B,YAAa2B,EAAIR,KAAK9B,SAASW,YAC/Ba,UAAWc,EAAIR,KAAK9B,SAASwB,WAG/B,EAAKS,SAAS,CAAEH,KAAMrC,Q,kEAtEL,IAAD,OAGdkD,UAAUC,aAEZD,UAAUC,YAAYC,oBAAmB,SAACC,GAGxC,IAAIC,EAAY,CACdnB,SAAUkB,EAAInB,OAAOC,SACrBC,UAAWiB,EAAInB,OAAOE,WAGxB,EAAKI,SAAS,CAAEN,OAAQoB,IAExBZ,IAAMC,IAAN,gGAC2F,EAAKV,MAAMC,OAAOC,SAD7G,YACyH,EAAKF,MAAMC,OAAOE,YACzIQ,MAAK,SAACC,GACNU,QAAQC,IAAIX,GAEZ,IAAI7C,EAAc,CAChBC,QAAS4C,EAAIR,KAAK9B,SAASN,QAC3BQ,OAAQoC,EAAIR,KAAK9B,SAASE,OAC1BF,SAAUsC,EAAIR,KAAK9B,SAASuC,KAC5BpC,YAAamC,EAAIR,KAAKU,QAAQrC,YAC9BN,UAAWyC,EAAIR,KAAKU,QAAQ3C,UAC5BC,SAAUwC,EAAIR,KAAKU,QAAQ1C,SAC3BG,OAAQqC,EAAIR,KAAKU,QAAQvC,OACzBL,SAAU0C,EAAIR,KAAKU,QAAQ5C,SAC3BQ,WAAYkC,EAAIR,KAAKU,QAAQpC,WAC7BT,YAAa2C,EAAIR,KAAKU,QAAQC,qBAAqB,GACnD1C,MAAOuC,EAAIR,KAAKU,QAAQE,cACxB/B,YAAa2B,EAAIR,KAAK9B,SAASW,YAC/Ba,UAAWc,EAAIR,KAAK9B,SAASwB,WAG/B,EAAKS,SAAS,CAAEH,KAAMrC,Y,+BAsC5B,OACE,qBAAKY,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAACG,EAAD,CACEM,cAAeoC,KAAKpC,cACpBO,eAAgB6B,KAAKlB,UACrBvC,YAAayD,KAAKxB,MAAMI,OAE1B,cAACvC,EAAD,CAAiBE,YAAayD,KAAKxB,MAAMI,gB,GA5FjCqB,aCJlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6567d211.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function ShowWeatherData(props) {\r\n  // console.log(props.dataWeather)\r\n\r\n  const {\r\n    country,\r\n    description,\r\n    pressure,\r\n    feelslike,\r\n    humidity,\r\n    image,\r\n    location,\r\n    precip,\r\n    region,\r\n    temperature,\r\n    wind_speed,\r\n  } = props.dataWeather;\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\">\r\n          <h2>\r\n            {temperature}\r\n            <sup>0</sup>C, {description}\r\n          </h2>\r\n          <p>\r\n            {\" \"}\r\n            Feelis Like {feelslike}\r\n            <sup>0</sup>C\r\n          </p>\r\n          <h4>{location}</h4>\r\n          <p>\r\n            {region}, {country}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"col-md-9\">\r\n          <img className=\"mainImage\" src={image} alt=\"weather\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\">\r\n          <p>\r\n            <b>Wind Speed</b> (km/hr)\r\n          </p>\r\n          <h2>{wind_speed}</h2>\r\n        </div>\r\n\r\n        <div className=\"col-md-3\">\r\n          <p>\r\n            <b>Pressure</b> (mm)\r\n          </p>\r\n          <h2>{pressure}</h2>\r\n        </div>\r\n\r\n        <div className=\"col-md-3\">\r\n          <p>\r\n            <b>Humidity</b>(%)\r\n          </p>\r\n          <h2>{humidity}</h2>\r\n        </div>\r\n\r\n        <div className=\"col-md-3\">\r\n          <p>\r\n            <b>Precipitation</b> (mm)\r\n          </p>\r\n          <h2>{precip}</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <div className=\"row text-center mt-3\">\r\n        <h1 className=\"text-align-center pr-5 pb-4 heading\">\r\n          Weather Update\r\n          {/* <FontAwesomeIcon\r\n            className=\"pl-2\"\r\n            icon={faCloudSun}\r\n            size=\"1x\"\r\n            color=\"#ffffff\"\r\n          /> */}\r\n        </h1>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <h2 style={{ color: \"#ff6600\" }}>{props.dataWeather.country}</h2>\r\n          <p>{props.dataWeather.timezone_id}</p>\r\n        </div>\r\n\r\n        <div className=\"col-md-4\">\r\n          <form onSubmit={(event) => props.updateWeather(event)}>\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} size=\"1x\" color=\"#000\" />\r\n            <input\r\n              id=\"text-field\"\r\n              className=\"inputBox pl-2\"\r\n              placeholder=\"Choose Your location\"\r\n              onChange={(event) => props.changeLocation(event.target.value)}\r\n            />\r\n\r\n            {/* <input className=\"inputBox\" placeholder=\"Please choose your location\" onChange={(event)=>{\r\n                   console.log(event.target.value)\r\n               }}/> */}\r\n          </form>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <h2 style={{ color: \"#ff6600\" }}>{props.dataWeather.localtime}</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\r\n\r\nimport ShowWeatherData from \"./ShowWeatherData\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    coords: {\r\n      latitude: 40,\r\n      longitude: -25,\r\n    },\r\n\r\n    data: {},\r\n    inputLocation: \"\",\r\n  };\r\n  componentDidMount() {\r\n    //console.log(\"mounted\");\r\n    //Device location\r\n    if (navigator.geolocation) {\r\n      //console.log(\"This works\");\r\n      navigator.geolocation.getCurrentPosition((pos) => {\r\n        // console.log(pos.coords.latitude);\r\n        // console.log(pos.coords.longitude);\r\n        let newCoords = {\r\n          latitude: pos.coords.latitude,\r\n          longitude: pos.coords.longitude,\r\n        };\r\n\r\n        this.setState({ coords: newCoords });\r\n\r\n        Axios.get(\r\n          `http://api.weatherstack.com/current?access_key=7b52522389250e460488f56720ef92dc&query=${this.state.coords.latitude},${this.state.coords.longitude}`\r\n        ).then((res) => {\r\n          console.log(res);\r\n\r\n          let dataWeather = {\r\n            country: res.data.location.country,\r\n            region: res.data.location.region,\r\n            location: res.data.location.name,\r\n            temperature: res.data.current.temperature,\r\n            feelslike: res.data.current.feelslike,\r\n            humidity: res.data.current.humidity,\r\n            precip: res.data.current.precip,\r\n            pressure: res.data.current.pressure,\r\n            wind_speed: res.data.current.wind_speed,\r\n            description: res.data.current.weather_descriptions[0],\r\n            image: res.data.current.weather_icons,\r\n            timezone_id: res.data.location.timezone_id,\r\n            localtime: res.data.location.localtime,\r\n          };\r\n\r\n          this.setState({ data: dataWeather });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  newChange = (value) => {\r\n    //   console.log(value)\r\n    this.setState({ inputLocation: value });\r\n  };\r\n\r\n  updateWeather = (event) => {\r\n    event.preventDefault();\r\n\r\n    Axios.get(\r\n      `http://api.weatherstack.com/current?access_key=7b52522389250e460488f56720ef92dc&query=${this.state.inputLocation}`\r\n    ).then((res) => {\r\n      //console.log(res)\r\n      let dataWeather = {\r\n        country: res.data.location.country,\r\n        region: res.data.location.region,\r\n        location: res.data.location.name,\r\n        temperature: res.data.current.temperature,\r\n        feelslike: res.data.current.feelslike,\r\n        humidity: res.data.current.humidity,\r\n        precip: res.data.current.precip,\r\n        pressure: res.data.current.pressure,\r\n        wind_speed: res.data.current.wind_speed,\r\n        description: res.data.current.weather_descriptions[0],\r\n        image: res.data.current.weather_icons,\r\n        timezone_id: res.data.location.timezone_id,\r\n        localtime: res.data.location.localtime,\r\n      };\r\n\r\n      this.setState({ data: dataWeather });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <Navbar\r\n            updateWeather={this.updateWeather}\r\n            changeLocation={this.newChange}\r\n            dataWeather={this.state.data}\r\n          />\r\n          <ShowWeatherData dataWeather={this.state.data} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}